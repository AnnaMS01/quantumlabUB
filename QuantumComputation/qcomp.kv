#:set cellsize 50
#:set space 5

<WindowManager>:
    menuscreen: menuscreen
    id: screen_manager
#    builderscreen: builderscreen
    
    MenuScreen:
        id:menuscreen
    
#   BuilderScreen:
 #      id: builderscreen
       
  # CustomScreen:
   #    id: customscreen
        
    
<TestRecycle>:
    orientation: 'horizontal'
    states: 'states'
    probability: 'probability'
    phases: 'phases'
    
    Label:
        id: states
        text: root.states
    Label:
        id: probability
        text: root.probability
    Label:
        id: phases
        text: root.phases
    
<CCell>:
    button: button
    size_hint: None, None
    size: cellsize, cellsize
    pos_hint: {"y":0}
    canvas:
        Color:
            rgba: 0,0,0,1
        Line:
            points: self.x, self.y+self.height/2., self.x+self.width, self.y+self.height/2.
            width: 3
            cap: 'none'
    
    Button:
        id: button
        opacity: 0.3
        size_hint: None, None
        size: cellsize,cellsize
        pos_hint: {"x":0, "y":0}
        disabled:True
    
    
<CRow>:
    orientation: 'horizontal'
    pos_hint: {"x":0}
    size_hint: None,None
    height: cellsize
        
    
<CGrid>:
    scroll: scroll  
    removecolbutton: removecolbutton  
    addcolbutton: addcolbutton  
    circuitslider: circuitslider
    
    ScrollView:
        pos: root.pos
        size: root.size
        do_scroll_X: True
        do_scroll_y: True
               
        FloatLayout:
            id: scroll
            size_hint_y: None
            size_hint_x: None
            size: root.width+200, root.height
            pos: root.pos
            canvas:
                Color:
                    rgba: 0,0,0,0
                
            
            Button:
                id: removecolbutton
                text: "- Col"
                size_hint: (None, None)
                size: cellsize, 0.5*cellsize
                pos_hint: {}
                pos: scroll.right-2*cellsize, scroll.top-30
                on_release: root.remove_col()
                
            Button:
                id: addcolbutton
                text: "+ Col"
                size_hint: (None, None)
                size: cellsize, scroll.height-(cellsize*1.25+space*2.25)
                pos_hint: {}
                pos: scroll.right-cellsize, scroll.y+(cellsize+space)*0.75
                on_release: root.add_col()
                
            Slider:
                id: circuitslider
                pos_hint: {}
                size_hint: (None, None)
                pos: cellsize*0.5+70-self.cursor_width/2, scroll.y
                size: scroll.width-cellsize*1.5-70+self.cursor_width, 0.75*cellsize
                step: 1
                on_touch_up: 
                    root.slidercanva()
                    app.sm.current_screen.QiskitConv()
                on_touch_move: 
                    root.slidercanva()
                    #app.sm.current_screen.QiskitConv()
                    
                



    


<BuilderScreen, CustomScreen, DemoScreen>:
    cgrid: cgrid
    circuit: circuit
    gatespanel: gatespanel
    gatesscroll: gatesscroll
    problabel: problabel
    probpanel: probpanel
    plotbox: plotbox
    warning: warning
    canva: canva
    docupanel: docupanel
    docuimage: docuimage
    title: title
    
    probbutton: probbutton
    gatesbutton: gatesbutton
    
    pagelabel: pagelabel
    
    datatest:datatest

    
    
    FloatLayout:
        id: canva
        canvas:
            Color:
                rgba: 0.7,0.7,0.7,1
            Rectangle:
                pos: self.pos
                size: self.size
            Color:
                rgba: 0.8,0.4,0,1
            Rectangle:
                pos: (0, self.height/1.087)
                size: (self.width, self.height/12.5)
            
        
#PANEL DE PROBABILITATS         
        FloatLayout: 
            id: probpanel
            visible: False
            opacity: 1 if self.visible else 0
            disabled: not self.visible
            canvas:
                Color:
                    rgba: 0.5,0.5,0.5,1
                Rectangle:
                    pos: self.pos
                    size: self.size
                    
                Color:
                    rgba: 0.3,0.3,0.3,1
                Rectangle:
                    pos: self.pos
                    size: (6, self.height)
                    
            pos_hint: {"right":1}
            size_hint: 0.3, 1
                
            Label:
                id: warning
                opacity: 1
                color: (0.9,0.1,0.1,1)
                text: "Some measurements aren't\nin the Z direction"
                size_hint: None, None     
                size: (50, 22)
                pos_hint: {'center_x': 0.5, "y": 0.51}
                halign: 'center'
                
                
            Button:
                text: "Menu"
                size_hint: (0.8, 0.05)
                pos_hint: {"x":0.1, "y": 0.01}
                on_release:
                    root.Exit()
    
                    
            ScrollView:
                opacity: 0
                #size_hint: (1, 0.34)
                #pos_hint: {"x":0.02, "y": 0.16}
                
                pos_hint: {"x":0.1, "y": 0.55}
                size_hint: (0.8, 0.4)
                do_scroll_X: False
                do_scroll_y: True
            
                Label:
                    id: problabel
                    size_hint: None, None     
                    size: self.texture_size
                    pos_hint: {'x': 0}
                    pos: root.pos
                    
            
            BoxLayout:
                id: plotbox
                
                size_hint: (1, 0.34)
                pos_hint: {"x":0.02, "y": 0.16}
                
            RecycleView:
                id: datatest
                pos_hint: {"x":0.1, "y": 0.55}
                size_hint: (0.8, 0.4)
                
                viewclass: 'TestRecycle'
                
                RecycleBoxLayout:
                    default_size: None, dp(56)
                    default_size_hint: 1, None
                    size_hint_y: None
                    height: self.minimum_height
                    orientation: 'vertical'
                
                
            Button:
                text: 'Q sphere'
                size_hint: (0.38, 0.03)
                pos_hint: {"x":0.1, "y": 0.08}
                on_release:
                    root.ShowQSpehre()
            
            Button:
                text: 'BlochSpheres'
                size_hint: (0.38, 0.03)
                pos_hint: {"x":0.52, "y": 0.08}
                on_release:
                    root.ShowBlochSpheres()
            
            Button:
                text: 'Density Matrix'
                size_hint: (0.29, 0.03)
                pos_hint: {"x":0.1, "y": 0.12}
                on_release:
                    root.ShowDensityMatrix()
                    
            Button:
                text: '2D'
                size_hint: (0.08, 0.03)
                pos_hint: {"x":0.4, "y": 0.12}
                on_release:
                    root.ShowDensityMatrix2D()
                    
            Button:
                text: 'Probabilities'
                size_hint: (0.38, 0.03)
                pos_hint: {"x":0.52, "y": 0.12}
                on_release:
                    root.ShowHistogram()
                    
                
                    
        #PANEL DE PORTES         
        FloatLayout: 
            id: gatespanel
            visible: False
            opacity: 1 if self.visible else 0
            disabled: not self.visible
            canvas:
                Color:
                    rgba: 0.5,0.5,0.5,1
                Rectangle:
                    pos: self.pos
                    size: self.size
                    
                Color:
                    rgba: 0.3,0.3,0.3,1
                Rectangle:
                    pos: (self.width, 0)
                    size: (6, self.height)
                Rectangle:
                    pos: (0, self.height-6)
                    size: (self.width, 6)
                    
            pos_hint: {"left":0, "bottom": 0}
            size_hint: 0.7, 0.38
            
            ScrollView:
                pos_hint: {"x": 0.05, "top": 0.95}
                size_hint: (0.9, 0.9)
                do_scroll_X: False
                do_scroll_y: True
                scroll_type: ["bars"]
                
                FloatLayout:
                    id: gatesscroll
                    size_hint_y: None
                    size_hint_x: 1
                    pos_hint: {"x": 0, "top": 1}
        
              
        FloatLayout: 
            id: docupanel
            pos_hint: {"left":0, "bottom": 0}
            size_hint: 0.7, 0.5
            
            
#            canvas:
 #               Color:
  #                  rgba: 1,0,0,0.5
   #             Rectangle:
    #                pos: self.pos
     #               size: self.size
                    
            
                             
            Image:
                id: docuimage
                source: ''
                mipmap: True
                pos_hint: {'top':1, 'x':0}
                size_hint: 1,None
                size: self.size
                allow_stretch: False
                
                
            Label:
                id: pagelabel
                text: ''
                bold: True
                color: (0,0,0,1)
                size_hint: 0.06, 0.06
                pos_hint: {"top":0.98, "right":0.88}
                
            Button:
                text: '<'
                size_hint: 0.04, 0.06
                pos_hint: {"top":0.98, "right":0.93}
                on_release:
                    root.prev_img()
                
            Button:
                text: '>'
                size_hint: 0.04, 0.06
                pos_hint: {"top":0.98, "right":0.98}
                on_release:
                    root.next_img()
                
                        
                        
        
        
                    
                    

            
        #PANEL DEL CIRCUIT         
        FloatLayout: 
            id: circuit
            pos_hint: {"top":0.92, "left":0}
            size_hint: 1, 0.92
                        
            BoxLayout:
                
                pos_hint: {"top":1,"x":0}
                size_hint: 0.98,0.85
                
                
               
                
                CGrid:
                    id: cgrid
                        

             
        Button:
            id: probbutton
            text: "Probabilities"
            size_hint: (0.15, 0.06)
            pos_hint: {"x": 0.54, "y":0.93}
            background_color: 1,1,1, 1
            on_release: root.cgrid.resize_panels(probpanel.visible, gatespanel.visible, False)
            on_release:
                if probpanel.visible == False: probpanel.visible = True
                elif probpanel.visible == True: probpanel.visible = False
                root.QiskitConv()
             
        Button:
            id: gatesbutton
            text: "Gates"
            size_hint: (0.1, 0.06)
            pos_hint: {"x": 0.43, "y":0.93}
            background_color: 0.9, 0.9, 0.9, 1
            on_release: root.cgrid.resize_panels(probpanel.visible, gatespanel.visible, False)
            on_release:
                if gatespanel.visible == False: gatespanel.visible = True
                elif gatespanel.visible == True: gatespanel.visible = False
            
        
            
        Button:
            disabled: True
            opacity: 0
            text: "+ Col"
            size_hint: (0.1, 0.06)
            pos_hint: {"x": 0.1+0.11*0, "y":0.93-0.07*0}
            on_release: root.cgrid.add_col()
                
        Button:
            disabled: True
            opacity: 0
            text: "- Col"
            size_hint: (0.1, 0.06)
            pos_hint: {"x": 0.1+0.11*0, "y":0.93-0.07*1}
            on_release: root.cgrid.remove_col()
            
        Button:
            text: "Add Qubit"
            size_hint: (0.1, 0.06)
            pos_hint: {"x": 0.13, "y":0.93-0.07*0}
            background_color: 0.9, 0.9, 0.9, 1
            on_release: root.cgrid.add_row()
            
        Button:
            text: "Refresh"
            size_hint: (0.1, 0.06)
            pos_hint: {"x": 0.02, "y":0.93-0.07*1}
            on_release: root.cgrid.refresh()
            
        Button:
            text: "Menu"
            size_hint: (0.1, 0.06)
            pos_hint: {"x": 0.02, "y":0.93-0.07*0}
            background_color: 0.9, 0.9, 0.9, 1
            on_release: 
                app.sm.current_screen.Exit()
            
        Button:
            text: "Measur. Dir."
            size_hint: (0.1, 0.06)
            pos_hint: {"x": 0.24, "y":0.93-0.07*0}
            background_color: 0.9, 0.9, 0.9, 1
            on_release: app.sm.current_screen.directpanel()
            
        Label:
            id: title
            text: ''
            bold: True
            size_hint: (0.1, 0.06)
            pos_hint: {"x": 0.5, "y":0.93}
            
            
            
    
<FilePanel>:
    fileselector: fileselector
    FileSelector:
        id: fileselector
        size_hint: (0.7,0.7)
        pos_hint: {"x": 0.15, "y":0.15}
        multiselect: False
        filter_dirs: True
        filters: [root.fileselector.starts_with]
        
    Button:
        text: "New"
        size_hint: (0.126,0.08)
        pos_hint: {"x":0.15, "y":0.05}
        on_release:
            root.fileselector.newgate()
    
    Button:
        text: "Import"
        size_hint: (0.132,0.08)
        pos_hint: {"x":0.2935, "y":0.05}
        on_release:
            root.fileselector.importfile(root.fileselector.path, root.fileselector.selection)
        
    Button:
        text: "Copy"
        size_hint: (0.132,0.08)
        pos_hint: {"x":0.437, "y":0.05}
        on_release:
            root.fileselector.copygate()
        
    Button:
        text: "Menu"
        size_hint: (0.132,0.08)
        pos_hint: {"x":0.5805, "y":0.05}
        on_release:
            app.sm.current_screen.Exit()
            
    Button:
        text: "Delete"
        size_hint: (0.132,0.08)
        pos_hint: {"x":0.724, "y":0.05}
        background_color: 1, 0.2, 0.2, 1
        on_release:
            root.fileselector.deletegate(root.fileselector.path, root.fileselector.selection)
            


<GateNameWindow>:
    errorlabel: errorlabel
    textbox: textbox

    pos_hint: {"center_x": 0.5, "center_y": 0.5}
    size_hint: (0.5, 0.4)
    canvas:
        Color:
            rgba: 0,0,0,0.95
        Rectangle:
            pos: self.pos
            size: self.size
            
    Label:
        pos_hint: {"center_x": 0.5, "center_y": 0.8}
        size: (50, 15)
        markup: True
        text: "[size=18]Introduce a gate name[/size]"
        
    Label:
        id: errorlabel
        pos_hint: {"center_x": 0.5, "center_y": 0.65}
        size: (50, 15)
        markup: True
        color: (0.9,0.1,0.1,1)
        #text: "[size=14]This is a test error message.[/size]"
            
    TextInput:
        id: textbox
        multiline: False
        focus: True
        pos_hint: {"center_x": 0.5, "top": 0.5}
        size_hint: (0.3, None)
        size: (0, 30)
        on_text_validate:
            root.creategate()
    
    Button:
        text: "Continue"
        pos_hint: {"center_x": 0.3, "top": 0.25}
        size_hint: (0.35, 0.2)
        on_release:
            root.creategate()
        
    Button:
        text: "Cancel"
        pos_hint: {"center_x": 0.7, "top": 0.25}
        size_hint: (0.35, 0.2)
        on_release:
            root.cancel()
        
        
<ArbitraryDirection>:
    slidertheta: slidertheta
    sliderphi: sliderphi
    canvas:
        Color:
            rgba: 1,0,0,0
        Rectangle:
            pos: self.pos
            size: self.size
            
            
    size_hint: None, None
    size: (app.sm.current_screen.width*0.8, app.sm.current_screen.height*0.15)
    
    SliderTheta:
        id: slidertheta
        pos_hint: {"x":0.08, "center_y": 0.15}
        size_hint: (0.4, 0.2)
    Label:
        text: "Theta = {0:.4g}".format(slidertheta.value)
        pos_hint: {"center_x":0.28, "y": 0.55}
        size_hint: None, None
        size: (20,20)
    SliderLabel:
        angle: 'theta'
        text: "0"
        pos_hint: {"x":0.09, "y": 0.30}
        size_hint: None, None
        size: (15,20)
    SliderLabel:
        angle: 'theta'
        text: "pi/2"
        pos_hint: {"center_x":0.28, "y": 0.30}
        size_hint: None, None
        size: (25,20)
    SliderLabel:
        angle: 'theta'
        text: "pi"
        pos_hint: {"right":0.47, "y": 0.30}
        size_hint: None, None
        size: (15,20)
        
        
    SliderPhi:
        id: sliderphi
        pos_hint: {"x":0.52, "center_y": 0.15}
        size_hint: (0.4, 0.2)
    Label:
        text: "Phi = {0:.4g}".format(sliderphi.value)
        pos_hint: {"center_x":0.72, "y": 0.55}
        size_hint: None, None
        size: (20,20) 
    SliderLabel:
        angle: 'phi'
        text: "0"
        pos_hint: {"x":0.53, "y": 0.30}
        size_hint: None, None
        size: (15,20)
    SliderLabel:
        angle: 'phi'
        text: "pi/2"
        pos_hint: {"center_x":0.62, "y": 0.30}
        size_hint: None, None
        size: (25,20)
    SliderLabel:
        angle: 'phi'
        text: "pi"
        pos_hint: {"center_x":0.72, "y": 0.30}
        size_hint: None, None
        size: (15,20)
    SliderLabel:
        angle: 'phi'
        text: "3pi/2"
        pos_hint: {"center_x":0.82, "y": 0.30}
        size_hint: None, None
        size: (30,20)
    SliderLabel:
        angle: 'phi'
        text: "2pi"
        pos_hint: {"right":0.91, "y": 0.30}
        size_hint: None, None
        size: (15,20)
        
        
        
<ArbitraryPanel>:
    scroll: scroll
    contrqbitlabel: contrqbitlabel
    targqbitlabel: targqbitlabel
    applybutton: applybutton
    pos_hint: {"x": 0.1, "y": 0.05}
    size_hint: (0.8, 0.85)
    canvas:
        Color:
            rgba: 0,0,0,0.95
        Rectangle:
            pos: self.pos
            size: self.size
            
    Label:
        id: contrqbitlabel
        pos_hint: {"right": 0.35, "center_y": 0.9}
        size_hint: None, None
        size: (160, 15)
        markup: True
        color: (0.6,0.9,0.6,1)
        halign:'left'
        text: "Control qubits: [b]0[/b]"
        
        
    Label: 
        id: targqbitlabel
        pos_hint: {"right": 0.85, "center_y": 0.9}
        size_hint: None, None
        size: (160, 15)
        markup: True
        color: (0.6,0.9,0.6,1)
        halign:'right'
        text: "Target qubits: [b]1[/b]"
    
    
    
    CounterLabel:
        qubittype: 'control'
        text:"+"
        size_hint: 0.025, 0.025
        pos_hint: {"x": 0.35, "y": 0.9}
        background_color: 0.6,0.6,0.6,1
        canvas:
            Color:
                rgba: 1,1,1,0.6
            Rectangle:
                pos: self.pos
                size: self.size
        
        
    CounterLabel:
        qubittype: 'control'
        text:"-"
        size_hint: 0.025, 0.025
        pos_hint: {"x": 0.35, "top": 0.9}
        background_color: 0.5,0.5,0.5,1
        canvas:
            Color:
                rgba: 1,1,1,0.4
            Rectangle:
                pos: self.pos
                size: self.size    
        
    CounterLabel:
        qubittype: 'target'
        text:"+"
        size_hint: 0.025, 0.025
        pos_hint: {"x": 0.85, "y": 0.9}
        background_color: 0.6,0.6,0.6,1
        canvas:
            Color:
                rgba: 1,1,1,0.6
            Rectangle:
                pos: self.pos
                size: self.size
        
        
    CounterLabel:
        qubittype: 'target'
        text:"-"
        size_hint: 0.025, 0.025
        pos_hint: {"x": 0.85, "top": 0.9}
        background_color: 0.5,0.5,0.5,1
        canvas:
            Color:
                rgba: 1,1,1,0.4
            Rectangle:
                pos: self.pos
                size: self.size
            
        
 
            
            
    ScrollView:
        pos_hint: {"x": 0, "top": 0.8}
        size_hint: (1, 0.7)
        do_scroll_X: False
        do_scroll_y: True
        
        FloatLayout:
            id: scroll
            size_hint_y: None
            size_hint_x: None
            pos_hint: {"x": 0, "top": 1}
     
     
    Button:
        id: applybutton
        visible: True
        opacity: 1 if self.visible else 0
        disabled: not self.visible
        text: 'Apply'
        pos_hint: {"right": 0.88, "y": 0.02}
        size_hint: (0.08, 0.05)
        on_release:
            root.apply()
            
    Button:
        text: 'Close'
        pos_hint: {"right": 0.98, "y": 0.02}
        size_hint: (0.08, 0.05)
        on_release:
            root.close()  
    
    
        
        
<QubitDirection>:
    slidertheta: slidertheta
    sliderphi: sliderphi
    qubit: qubit
    canvas:
        Color:
            rgba: 1,0,0,0
        Rectangle:
            pos: self.pos
            size: self.size
            
            
    size_hint: None, None
    size: (app.sm.current_screen.width*0.8, app.sm.current_screen.height*0.15)
    
    Label:
        id: qubit
        pos_hint: {"x": 0.03, "center_y":0.2}
        size_hint: None, None
        size: (20,20)
    
    SliderTheta:
        id: slidertheta
        pos_hint: {"x":0.08, "center_y": 0.15}
        size_hint: (0.3, 0.2)
    Label:
        text: "Theta = {0:.4g}".format(slidertheta.value)
        pos_hint: {"center_x":0.23, "y": 0.55}
        size_hint: None, None
        size: (20,20)
    SliderLabel:
        angle: 'theta'
        text: "0"
        pos_hint: {"x":0.09, "y": 0.30}
        size_hint: None, None
        size: (15,20)
    SliderLabel:
        angle: 'theta'
        text: "pi/2"
        pos_hint: {"center_x":0.23, "y": 0.30}
        size_hint: None, None
        size: (25,20)
    SliderLabel:
        angle: 'theta'
        text: "pi"
        pos_hint: {"right":0.37, "y": 0.30}
        size_hint: None, None
        size: (15,20)
        
        
    SliderPhi:
        id: sliderphi
        pos_hint: {"x":0.42, "center_y": 0.15}
        size_hint: (0.3, 0.2)
    Label:
        text: "Phi = {0:.4g}".format(sliderphi.value)
        pos_hint: {"center_x":0.57, "y": 0.55}
        size_hint: None, None
        size: (20,20) 
    SliderLabel:
        angle: 'phi'
        text: "0"
        pos_hint: {"x":0.43, "y": 0.30}
        size_hint: None, None
        size: (15,20)
    SliderLabel:
        angle: 'phi'
        text: "pi/2"
        pos_hint: {"center_x":0.495, "y": 0.30}
        size_hint: None, None
        size: (25,20)
    SliderLabel:
        angle: 'phi'
        text: "pi"
        pos_hint: {"center_x":0.57, "y": 0.30}
        size_hint: None, None
        size: (15,20)
    SliderLabel:
        angle: 'phi'
        text: "3pi/2"
        pos_hint: {"center_x":0.645, "y": 0.30}
        size_hint: None, None
        size: (30,20)
    SliderLabel:
        angle: 'phi'
        text: "2pi"
        pos_hint: {"right":0.71, "y": 0.30}
        size_hint: None, None
        size: (15,20)
        
    Button:
        text: "X"
        pos_hint: {"x":0.73, "center_y": 0.22}
        size_hint: 0.06, 0.47
        on_release:
            root.xdirection()
        
    Button:
        text: "Y"
        pos_hint: {"x":0.795, "center_y": 0.22}
        size_hint: 0.06, 0.47
        on_release:
            root.ydirection()
        
    Button:
        text: "Z"
        pos_hint: {"x":0.86, "center_y": 0.22}
        size_hint: 0.06, 0.47
        on_release:
            root.zdirection()
            
    Button:
        text: "Show"
        pos_hint: {"x":0.935, "center_y": 0.22}
        size_hint: 0.06, 0.47
        on_release:
            root.ShowDirection()
    
        
<DirectionPanel>:
    scroll: scroll
    pos_hint: {"x": 0.1, "y": 0.05}
    size_hint: (0.8, 0.85)
    canvas:
        Color:
            rgba: 0,0,0,0.95
        Rectangle:
            pos: self.pos
            size: self.size
    ScrollView:
        pos_hint: {"x": 0, "top": 1}
        size_hint: (1, 0.9)
        do_scroll_X: False
        do_scroll_y: True
        
        FloatLayout:
            id: scroll
            size_hint_y: None
            size_hint_x: None
            pos_hint: {"x": 0, "top": 1}
            
            
        
    Button:
        text: 'Close'
        pos_hint: {"right": 0.98, "y": 0.02}
        size_hint: (0.08, 0.05)
        on_release:
            root.close()


<DemoMenu>:
    scroll: scroll
    
    pos_hint:{"x":0, "top":1}
    size_hint:(1,1)
    
#    pos: app.sm.current_screen.pos
 #   size: app.sm.current_screen.size
    
    FloatLayout:
        canvas:
            Color:
                rgba: 0.7,0.7,0.7,1
            Rectangle:
                pos: self.pos
                size: self.size
        ScrollView:
            size_hint: (0.6, 0.6)
            pos: (root.x+root.width*0.2, root.y+root.height*0.2)
            do_scroll_X: False
            do_scroll_y: True
            
                   
            FloatLayout:
                id: scroll
                size_hint_y: None
                size_hint_x: None
                pos_hint: {"x":0, "top":1}
                
                

    
<MenuScreen>:
    name: "MenuScreen"
    
        
    FloatLayout:
    
        canvas:
            Color:
                rgba: 0.7,0.7,0.7,1
            Rectangle:
                pos: self.pos
                size: self.size
            
    
        Button:
            text: "Circuit Builder"
            size_hint: (0.6, 0.1)
            pos_hint: {"x": 0.2, "top":0.85}
            on_release: 
                root.Builder()
                
        Button:
            text: "Custom Gates"
            size_hint: (0.6, 0.1)
            pos_hint: {"x": 0.2, "top":0.7}
            on_release: 
                root.Custom()
                
        Button:
            text: "Demos"
            size_hint: (0.6, 0.1)
            pos_hint: {"x": 0.2, "top":0.55}
            on_release: 
                root.Demo()
                
        Button:
            text: "Exit"
            size_hint: (0.6, 0.1)
            pos_hint: {"x": 0.2, "top":0.2}
            on_release: 
                App.get_running_app().stop()